version: '3.8'
services:
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_DATA: /data/postgres
    ports:
      - 5432:5432
    volumes:
      - postgres:/data/postgres

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/root/.pgadmin
      - ./db-servers.json:/pgadmin4/servers.json
    ports:
      - 5005:80
    restart: unless-stopped

  cms:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - .:/app
    ports:
      - 5000:5000
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./metrics/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - alertmanager:alertmanager
      # - cadvisor:cadvisor
    # depends_on:
    #   - cadvisor

  grafana:
    image: grafana/grafana
    user: '472'
    restart: unless-stopped
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./metrics/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./metrics/grafana/config.monitoring
    ports:
      - 8085:3000
    depends_on:
      - prometheus

  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    ports:
      - 9093:9093
    volumes:
      - ./metrics/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   ports:
  #     - 8084:8080
  #   restart: unless-stopped
  #   deploy:
  #     mode: global

  # node-exporter:
  #   image: prom/node-exporter
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - --collector.filesystem.ignored-mount-points
  #     - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
  #   ports:
  #     - 9100:9100
  #   restart: unless-stopped
  #   deploy:
  #     mode: global

volumes:
  prometheus_data:
  grafana_data:
  postgres:
  pgadmin:
    
